//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("smsfeedbackModel", "UsersForWorkingPoints", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.User), "WorkingPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.WorkingPoint))]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "FK_CompanyTag", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.Company), "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.Tag), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "FK_UserCompany", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SmsFeedback_EFModels.Company), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.User), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "ConversationMessage", "Conversation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.Conversation), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.Message), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "MembershipApplication", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.Application), "Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.Membership), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "RoleApplication", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.Application), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.Role), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "UserApplication", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.Application), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.User), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "MembershipUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.User), "Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SmsFeedback_EFModels.Membership), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "UserProfile", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.User), "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SmsFeedback_EFModels.Profile), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "FK_WorkingPointConversation", "WorkingPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.WorkingPoint), "Conversation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.Conversation), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "ConversationClient", "Conversation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.Conversation), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.Client))]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "FK_ConversationConversationTags", "Conversation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.Conversation), "ConversationTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.ConversationTag), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "FK_TagConversationTags", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.Tag), "ConversationTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.ConversationTag), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "UsersInRoles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.User))]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "WorkingPointActivityLogWorkingPoint", "WorkingPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.WorkingPoint), "ActivityLogWorkingPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.ActivityLogWorkingPoint))]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "CompanySubscriptions", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.Company), "Subscriptions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.Subscriptions))]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "FK_SupportConversationForWorkingPoint1", "Conversation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SmsFeedback_EFModels.Conversation), "WorkingPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.WorkingPoint), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "FK_TagTagTagType", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.Tag), "TagTagType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.TagTagType), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "FK_TagTypeTagTagType", "TagType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.TagType), "TagTagType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.TagTagType), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "ConversationHistoryEventType", "ConversationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.ConversationHistory), "EventType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SmsFeedback_EFModels.EventType), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "ConversationToConversationHistory", "Conversation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.Conversation), "ConversationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.ConversationHistory), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "ConversationHistoryMessage", "ConversationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.ConversationHistory), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.Message), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "UserXmppConnection", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.User), "XmppConnection", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SmsFeedback_EFModels.XmppConnection), true)]
[assembly: EdmRelationshipAttribute("smsfeedbackModel", "MessageXmppConnection", "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SmsFeedback_EFModels.Message), "XmppConnection", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SmsFeedback_EFModels.XmppConnection), true)]

#endregion

namespace SmsFeedback_EFModels
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class smsfeedbackEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new smsfeedbackEntities object using the connection string found in the 'smsfeedbackEntities' section of the application configuration file.
        /// </summary>
        public smsfeedbackEntities() : base("name=smsfeedbackEntities", "smsfeedbackEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new smsfeedbackEntities object.
        /// </summary>
        public smsfeedbackEntities(string connectionString) : base(connectionString, "smsfeedbackEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new smsfeedbackEntities object.
        /// </summary>
        public smsfeedbackEntities(EntityConnection connection) : base(connection, "smsfeedbackEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Conversation> Conversations
        {
            get
            {
                if ((_Conversations == null))
                {
                    _Conversations = base.CreateObjectSet<Conversation>("Conversations");
                }
                return _Conversations;
            }
        }
        private ObjectSet<Conversation> _Conversations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkingPoint> WorkingPoints
        {
            get
            {
                if ((_WorkingPoints == null))
                {
                    _WorkingPoints = base.CreateObjectSet<WorkingPoint>("WorkingPoints");
                }
                return _WorkingPoints;
            }
        }
        private ObjectSet<WorkingPoint> _WorkingPoints;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<XmppConnection> XmppConnections
        {
            get
            {
                if ((_XmppConnections == null))
                {
                    _XmppConnections = base.CreateObjectSet<XmppConnection>("XmppConnections");
                }
                return _XmppConnections;
            }
        }
        private ObjectSet<XmppConnection> _XmppConnections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application> Applications
        {
            get
            {
                if ((_Applications == null))
                {
                    _Applications = base.CreateObjectSet<Application>("Applications");
                }
                return _Applications;
            }
        }
        private ObjectSet<Application> _Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Membership> Memberships
        {
            get
            {
                if ((_Memberships == null))
                {
                    _Memberships = base.CreateObjectSet<Membership>("Memberships");
                }
                return _Memberships;
            }
        }
        private ObjectSet<Membership> _Memberships;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Profile> Profiles
        {
            get
            {
                if ((_Profiles == null))
                {
                    _Profiles = base.CreateObjectSet<Profile>("Profiles");
                }
                return _Profiles;
            }
        }
        private ObjectSet<Profile> _Profiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConversationTag> ConversationTags
        {
            get
            {
                if ((_ConversationTags == null))
                {
                    _ConversationTags = base.CreateObjectSet<ConversationTag>("ConversationTags");
                }
                return _ConversationTags;
            }
        }
        private ObjectSet<ConversationTag> _ConversationTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivityLogWorkingPoint> ActivityLogWorkingPoints
        {
            get
            {
                if ((_ActivityLogWorkingPoints == null))
                {
                    _ActivityLogWorkingPoints = base.CreateObjectSet<ActivityLogWorkingPoint>("ActivityLogWorkingPoints");
                }
                return _ActivityLogWorkingPoints;
            }
        }
        private ObjectSet<ActivityLogWorkingPoint> _ActivityLogWorkingPoints;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subscriptions> Subscriptions
        {
            get
            {
                if ((_Subscriptions == null))
                {
                    _Subscriptions = base.CreateObjectSet<Subscriptions>("Subscriptions");
                }
                return _Subscriptions;
            }
        }
        private ObjectSet<Subscriptions> _Subscriptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TagType> TagTypes
        {
            get
            {
                if ((_TagTypes == null))
                {
                    _TagTypes = base.CreateObjectSet<TagType>("TagTypes");
                }
                return _TagTypes;
            }
        }
        private ObjectSet<TagType> _TagTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TagTagType> TagTagTypes
        {
            get
            {
                if ((_TagTagTypes == null))
                {
                    _TagTagTypes = base.CreateObjectSet<TagTagType>("TagTagTypes");
                }
                return _TagTagTypes;
            }
        }
        private ObjectSet<TagTagType> _TagTagTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventType> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventType>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventType> _EventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConversationHistory> ConversationHistories
        {
            get
            {
                if ((_ConversationHistories == null))
                {
                    _ConversationHistories = base.CreateObjectSet<ConversationHistory>("ConversationHistories");
                }
                return _ConversationHistories;
            }
        }
        private ObjectSet<ConversationHistory> _ConversationHistories;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Conversations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConversations(Conversation conversation)
        {
            base.AddObject("Conversations", conversation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkingPoints EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkingPoints(WorkingPoint workingPoint)
        {
            base.AddObject("WorkingPoints", workingPoint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the XmppConnections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToXmppConnections(XmppConnection xmppConnection)
        {
            base.AddObject("XmppConnections", xmppConnection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplications(Application application)
        {
            base.AddObject("Applications", application);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Memberships EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMemberships(Membership membership)
        {
            base.AddObject("Memberships", membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Profiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProfiles(Profile profile)
        {
            base.AddObject("Profiles", profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConversationTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConversationTags(ConversationTag conversationTag)
        {
            base.AddObject("ConversationTags", conversationTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivityLogWorkingPoints EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivityLogWorkingPoints(ActivityLogWorkingPoint activityLogWorkingPoint)
        {
            base.AddObject("ActivityLogWorkingPoints", activityLogWorkingPoint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subscriptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriptions(Subscriptions subscriptions)
        {
            base.AddObject("Subscriptions", subscriptions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TagTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTagTypes(TagType tagType)
        {
            base.AddObject("TagTypes", tagType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TagTagTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTagTagTypes(TagTagType tagTagType)
        {
            base.AddObject("TagTagTypes", tagTagType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventType eventType)
        {
            base.AddObject("EventTypes", eventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConversationHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConversationHistories(ConversationHistory conversationHistory)
        {
            base.AddObject("ConversationHistories", conversationHistory);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="ActivityLogWorkingPoint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityLogWorkingPoint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivityLogWorkingPoint object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="sentSms">Initial value of the SentSms property.</param>
        public static ActivityLogWorkingPoint CreateActivityLogWorkingPoint(global::System.Int32 id, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Int32 sentSms)
        {
            ActivityLogWorkingPoint activityLogWorkingPoint = new ActivityLogWorkingPoint();
            activityLogWorkingPoint.Id = id;
            activityLogWorkingPoint.StartDate = startDate;
            activityLogWorkingPoint.EndDate = endDate;
            activityLogWorkingPoint.SentSms = sentSms;
            return activityLogWorkingPoint;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SentSms
        {
            get
            {
                return _SentSms;
            }
            set
            {
                OnSentSmsChanging(value);
                ReportPropertyChanging("SentSms");
                _SentSms = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentSms");
                OnSentSmsChanged();
            }
        }
        private global::System.Int32 _SentSms;
        partial void OnSentSmsChanging(global::System.Int32 value);
        partial void OnSentSmsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "WorkingPointActivityLogWorkingPoint", "WorkingPoint")]
        public WorkingPoint WorkingPoint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkingPoint>("smsfeedbackModel.WorkingPointActivityLogWorkingPoint", "WorkingPoint").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkingPoint>("smsfeedbackModel.WorkingPointActivityLogWorkingPoint", "WorkingPoint").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkingPoint> WorkingPointReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkingPoint>("smsfeedbackModel.WorkingPointActivityLogWorkingPoint", "WorkingPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkingPoint>("smsfeedbackModel.WorkingPointActivityLogWorkingPoint", "WorkingPoint", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application object.
        /// </summary>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static Application CreateApplication(global::System.String applicationName, global::System.Guid applicationId)
        {
            Application application = new Application();
            application.ApplicationName = applicationName;
            application.ApplicationId = applicationId;
            return application;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "MembershipApplication", "Membership")]
        public EntityCollection<Membership> Memberships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Membership>("smsfeedbackModel.MembershipApplication", "Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Membership>("smsfeedbackModel.MembershipApplication", "Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "RoleApplication", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("smsfeedbackModel.RoleApplication", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("smsfeedbackModel.RoleApplication", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "UserApplication", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("smsfeedbackModel.UserApplication", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("smsfeedbackModel.UserApplication", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="telNumber">Initial value of the TelNumber property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isSupportClient">Initial value of the isSupportClient property.</param>
        public static Client CreateClient(global::System.String telNumber, global::System.String displayName, global::System.String description, global::System.Boolean isSupportClient)
        {
            Client client = new Client();
            client.TelNumber = telNumber;
            client.DisplayName = displayName;
            client.Description = description;
            client.isSupportClient = isSupportClient;
            return client;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TelNumber
        {
            get
            {
                return _TelNumber;
            }
            set
            {
                if (_TelNumber != value)
                {
                    OnTelNumberChanging(value);
                    ReportPropertyChanging("TelNumber");
                    _TelNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TelNumber");
                    OnTelNumberChanged();
                }
            }
        }
        private global::System.String _TelNumber;
        partial void OnTelNumberChanging(global::System.String value);
        partial void OnTelNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isSupportClient
        {
            get
            {
                return _isSupportClient;
            }
            set
            {
                OnisSupportClientChanging(value);
                ReportPropertyChanging("isSupportClient");
                _isSupportClient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isSupportClient");
                OnisSupportClientChanged();
            }
        }
        private global::System.Boolean _isSupportClient;
        partial void OnisSupportClientChanging(global::System.Boolean value);
        partial void OnisSupportClientChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "ConversationClient", "Conversation")]
        public EntityCollection<Conversation> Conversations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Conversation>("smsfeedbackModel.ConversationClient", "Conversation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Conversation>("smsfeedbackModel.ConversationClient", "Conversation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="nrOfTrainingHoursDelivered">Initial value of the NrOfTrainingHoursDelivered property.</param>
        public static Company CreateCompany(global::System.String name, global::System.String description, global::System.String address, global::System.Int32 nrOfTrainingHoursDelivered)
        {
            Company company = new Company();
            company.Name = name;
            company.Description = description;
            company.Address = address;
            company.NrOfTrainingHoursDelivered = nrOfTrainingHoursDelivered;
            return company;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NrOfTrainingHoursDelivered
        {
            get
            {
                return _NrOfTrainingHoursDelivered;
            }
            set
            {
                OnNrOfTrainingHoursDeliveredChanging(value);
                ReportPropertyChanging("NrOfTrainingHoursDelivered");
                _NrOfTrainingHoursDelivered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NrOfTrainingHoursDelivered");
                OnNrOfTrainingHoursDeliveredChanged();
            }
        }
        private global::System.Int32 _NrOfTrainingHoursDelivered;
        partial void OnNrOfTrainingHoursDeliveredChanging(global::System.Int32 value);
        partial void OnNrOfTrainingHoursDeliveredChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_CompanyTag", "Tag")]
        public EntityCollection<Tag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("smsfeedbackModel.FK_CompanyTag", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("smsfeedbackModel.FK_CompanyTag", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_UserCompany", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("smsfeedbackModel.FK_UserCompany", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("smsfeedbackModel.FK_UserCompany", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "CompanySubscriptions", "Subscriptions")]
        public Subscriptions Subscription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriptions>("smsfeedbackModel.CompanySubscriptions", "Subscriptions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriptions>("smsfeedbackModel.CompanySubscriptions", "Subscriptions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subscriptions> SubscriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subscriptions>("smsfeedbackModel.CompanySubscriptions", "Subscriptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subscriptions>("smsfeedbackModel.CompanySubscriptions", "Subscriptions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="Conversation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Conversation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Conversation object.
        /// </summary>
        /// <param name="convId">Initial value of the ConvId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="read">Initial value of the Read property.</param>
        /// <param name="timeUpdated">Initial value of the TimeUpdated property.</param>
        /// <param name="from">Initial value of the From property.</param>
        /// <param name="starred">Initial value of the Starred property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="workingPoint_TelNumber">Initial value of the WorkingPoint_TelNumber property.</param>
        /// <param name="lastSequence">Initial value of the LastSequence property.</param>
        public static Conversation CreateConversation(global::System.String convId, global::System.String text, global::System.Boolean read, global::System.DateTime timeUpdated, global::System.String from, global::System.Boolean starred, global::System.DateTime startTime, global::System.String workingPoint_TelNumber, global::System.Int32 lastSequence)
        {
            Conversation conversation = new Conversation();
            conversation.ConvId = convId;
            conversation.Text = text;
            conversation.Read = read;
            conversation.TimeUpdated = timeUpdated;
            conversation.From = from;
            conversation.Starred = starred;
            conversation.StartTime = startTime;
            conversation.WorkingPoint_TelNumber = workingPoint_TelNumber;
            conversation.LastSequence = lastSequence;
            return conversation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConvId
        {
            get
            {
                return _ConvId;
            }
            set
            {
                if (_ConvId != value)
                {
                    OnConvIdChanging(value);
                    ReportPropertyChanging("ConvId");
                    _ConvId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ConvId");
                    OnConvIdChanged();
                }
            }
        }
        private global::System.String _ConvId;
        partial void OnConvIdChanging(global::System.String value);
        partial void OnConvIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Read
        {
            get
            {
                return _Read;
            }
            set
            {
                OnReadChanging(value);
                ReportPropertyChanging("Read");
                _Read = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Read");
                OnReadChanged();
            }
        }
        private global::System.Boolean _Read;
        partial void OnReadChanging(global::System.Boolean value);
        partial void OnReadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeUpdated
        {
            get
            {
                return _TimeUpdated;
            }
            set
            {
                OnTimeUpdatedChanging(value);
                ReportPropertyChanging("TimeUpdated");
                _TimeUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeUpdated");
                OnTimeUpdatedChanged();
            }
        }
        private global::System.DateTime _TimeUpdated;
        partial void OnTimeUpdatedChanging(global::System.DateTime value);
        partial void OnTimeUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private global::System.String _From;
        partial void OnFromChanging(global::System.String value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Starred
        {
            get
            {
                return _Starred;
            }
            set
            {
                OnStarredChanging(value);
                ReportPropertyChanging("Starred");
                _Starred = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Starred");
                OnStarredChanged();
            }
        }
        private global::System.Boolean _Starred;
        partial void OnStarredChanging(global::System.Boolean value);
        partial void OnStarredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkingPoint_TelNumber
        {
            get
            {
                return _WorkingPoint_TelNumber;
            }
            set
            {
                OnWorkingPoint_TelNumberChanging(value);
                ReportPropertyChanging("WorkingPoint_TelNumber");
                _WorkingPoint_TelNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WorkingPoint_TelNumber");
                OnWorkingPoint_TelNumberChanged();
            }
        }
        private global::System.String _WorkingPoint_TelNumber;
        partial void OnWorkingPoint_TelNumberChanging(global::System.String value);
        partial void OnWorkingPoint_TelNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastSequence
        {
            get
            {
                return _LastSequence;
            }
            set
            {
                OnLastSequenceChanging(value);
                ReportPropertyChanging("LastSequence");
                _LastSequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastSequence");
                OnLastSequenceChanged();
            }
        }
        private global::System.Int32 _LastSequence;
        partial void OnLastSequenceChanging(global::System.Int32 value);
        partial void OnLastSequenceChanged();
    
        /// <summary>
        /// Sms Convesations are treated differently
        /// </summary>
        /// <LongDescription>
        /// Dragos: right now we have sms and xmpp based conversations - I chose to implement this as a true/false flag and not as an enum due to speed and the fact that I don&apos;t see this changing in the forsesable future
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSmsBased
        {
            get
            {
                return _IsSmsBased;
            }
            set
            {
                OnIsSmsBasedChanging(value);
                ReportPropertyChanging("IsSmsBased");
                _IsSmsBased = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSmsBased");
                OnIsSmsBasedChanged();
            }
        }
        private global::System.Boolean _IsSmsBased = false;
        partial void OnIsSmsBasedChanging(global::System.Boolean value);
        partial void OnIsSmsBasedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "ConversationMessage", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("smsfeedbackModel.ConversationMessage", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("smsfeedbackModel.ConversationMessage", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_WorkingPointConversation", "WorkingPoint")]
        public WorkingPoint WorkingPoint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkingPoint>("smsfeedbackModel.FK_WorkingPointConversation", "WorkingPoint").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkingPoint>("smsfeedbackModel.FK_WorkingPointConversation", "WorkingPoint").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkingPoint> WorkingPointReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkingPoint>("smsfeedbackModel.FK_WorkingPointConversation", "WorkingPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkingPoint>("smsfeedbackModel.FK_WorkingPointConversation", "WorkingPoint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "ConversationClient", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("smsfeedbackModel.ConversationClient", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("smsfeedbackModel.ConversationClient", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("smsfeedbackModel.ConversationClient", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("smsfeedbackModel.ConversationClient", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_ConversationConversationTags", "ConversationTag")]
        public EntityCollection<ConversationTag> ConversationTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConversationTag>("smsfeedbackModel.FK_ConversationConversationTags", "ConversationTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConversationTag>("smsfeedbackModel.FK_ConversationConversationTags", "ConversationTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_SupportConversationForWorkingPoint1", "WorkingPoint")]
        public EntityCollection<WorkingPoint> WorkingPoints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkingPoint>("smsfeedbackModel.FK_SupportConversationForWorkingPoint1", "WorkingPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkingPoint>("smsfeedbackModel.FK_SupportConversationForWorkingPoint1", "WorkingPoint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "ConversationToConversationHistory", "ConversationHistory")]
        public EntityCollection<ConversationHistory> ConversationEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConversationHistory>("smsfeedbackModel.ConversationToConversationHistory", "ConversationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConversationHistory>("smsfeedbackModel.ConversationToConversationHistory", "ConversationHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="ConversationHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConversationHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConversationHistory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="conversationConvId">Initial value of the ConversationConvId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        public static ConversationHistory CreateConversationHistory(global::System.Int32 id, global::System.Int32 sequence, global::System.DateTime date, global::System.String conversationConvId, global::System.Int32 messageId)
        {
            ConversationHistory conversationHistory = new ConversationHistory();
            conversationHistory.Id = id;
            conversationHistory.Sequence = sequence;
            conversationHistory.Date = date;
            conversationHistory.ConversationConvId = conversationConvId;
            conversationHistory.MessageId = messageId;
            return conversationHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventTypeName
        {
            get
            {
                return _EventTypeName;
            }
            set
            {
                OnEventTypeNameChanging(value);
                ReportPropertyChanging("EventTypeName");
                _EventTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EventTypeName");
                OnEventTypeNameChanged();
            }
        }
        private global::System.String _EventTypeName;
        partial void OnEventTypeNameChanging(global::System.String value);
        partial void OnEventTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConversationConvId
        {
            get
            {
                return _ConversationConvId;
            }
            set
            {
                OnConversationConvIdChanging(value);
                ReportPropertyChanging("ConversationConvId");
                _ConversationConvId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ConversationConvId");
                OnConversationConvIdChanged();
            }
        }
        private global::System.String _ConversationConvId;
        partial void OnConversationConvIdChanging(global::System.String value);
        partial void OnConversationConvIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                OnMessageIdChanging(value);
                ReportPropertyChanging("MessageId");
                _MessageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageId");
                OnMessageIdChanged();
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "ConversationHistoryEventType", "EventType")]
        public EventType EventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("smsfeedbackModel.ConversationHistoryEventType", "EventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("smsfeedbackModel.ConversationHistoryEventType", "EventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventType> EventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("smsfeedbackModel.ConversationHistoryEventType", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventType>("smsfeedbackModel.ConversationHistoryEventType", "EventType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "ConversationToConversationHistory", "Conversation")]
        public Conversation Conversation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("smsfeedbackModel.ConversationToConversationHistory", "Conversation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("smsfeedbackModel.ConversationToConversationHistory", "Conversation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Conversation> ConversationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("smsfeedbackModel.ConversationToConversationHistory", "Conversation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Conversation>("smsfeedbackModel.ConversationToConversationHistory", "Conversation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "ConversationHistoryMessage", "Message")]
        public Message Message
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("smsfeedbackModel.ConversationHistoryMessage", "Message").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("smsfeedbackModel.ConversationHistoryMessage", "Message").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Message> MessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("smsfeedbackModel.ConversationHistoryMessage", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Message>("smsfeedbackModel.ConversationHistoryMessage", "Message", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="ConversationTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConversationTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConversationTag object.
        /// </summary>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="conversationConvId">Initial value of the ConversationConvId property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        /// <param name="tagCompanyName">Initial value of the TagCompanyName property.</param>
        public static ConversationTag CreateConversationTag(global::System.DateTime dateAdded, global::System.String conversationConvId, global::System.String tagName, global::System.String tagCompanyName)
        {
            ConversationTag conversationTag = new ConversationTag();
            conversationTag.DateAdded = dateAdded;
            conversationTag.ConversationConvId = conversationConvId;
            conversationTag.TagName = tagName;
            conversationTag.TagCompanyName = tagCompanyName;
            return conversationTag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConversationConvId
        {
            get
            {
                return _ConversationConvId;
            }
            set
            {
                if (_ConversationConvId != value)
                {
                    OnConversationConvIdChanging(value);
                    ReportPropertyChanging("ConversationConvId");
                    _ConversationConvId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ConversationConvId");
                    OnConversationConvIdChanged();
                }
            }
        }
        private global::System.String _ConversationConvId;
        partial void OnConversationConvIdChanging(global::System.String value);
        partial void OnConversationConvIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                if (_TagName != value)
                {
                    OnTagNameChanging(value);
                    ReportPropertyChanging("TagName");
                    _TagName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TagName");
                    OnTagNameChanged();
                }
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagCompanyName
        {
            get
            {
                return _TagCompanyName;
            }
            set
            {
                if (_TagCompanyName != value)
                {
                    OnTagCompanyNameChanging(value);
                    ReportPropertyChanging("TagCompanyName");
                    _TagCompanyName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TagCompanyName");
                    OnTagCompanyNameChanged();
                }
            }
        }
        private global::System.String _TagCompanyName;
        partial void OnTagCompanyNameChanging(global::System.String value);
        partial void OnTagCompanyNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_ConversationConversationTags", "Conversation")]
        public Conversation Conversation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("smsfeedbackModel.FK_ConversationConversationTags", "Conversation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("smsfeedbackModel.FK_ConversationConversationTags", "Conversation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Conversation> ConversationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("smsfeedbackModel.FK_ConversationConversationTags", "Conversation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Conversation>("smsfeedbackModel.FK_ConversationConversationTags", "Conversation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_TagConversationTags", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("smsfeedbackModel.FK_TagConversationTags", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("smsfeedbackModel.FK_TagConversationTags", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("smsfeedbackModel.FK_TagConversationTags", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("smsfeedbackModel.FK_TagConversationTags", "Tag", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="EventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventType object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="friendlyName">Initial value of the FriendlyName property.</param>
        public static EventType CreateEventType(global::System.String name, global::System.String description, global::System.String friendlyName)
        {
            EventType eventType = new EventType();
            eventType.Name = name;
            eventType.Description = description;
            eventType.FriendlyName = friendlyName;
            return eventType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FriendlyName
        {
            get
            {
                return _FriendlyName;
            }
            set
            {
                OnFriendlyNameChanging(value);
                ReportPropertyChanging("FriendlyName");
                _FriendlyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FriendlyName");
                OnFriendlyNameChanged();
            }
        }
        private global::System.String _FriendlyName;
        partial void OnFriendlyNameChanging(global::System.String value);
        partial void OnFriendlyNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "ConversationHistoryEventType", "ConversationHistory")]
        public EntityCollection<ConversationHistory> ConversationHistoryEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConversationHistory>("smsfeedbackModel.ConversationHistoryEventType", "ConversationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConversationHistory>("smsfeedbackModel.ConversationHistoryEventType", "ConversationHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Membership object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowsStart">Initial value of the FailedPasswordAnswerAttemptWindowsStart property.</param>
        public static Membership CreateMembership(global::System.Guid applicationId, global::System.Guid userId, global::System.String password, global::System.Int32 passwordFormat, global::System.String passwordSalt, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowsStart)
        {
            Membership membership = new Membership();
            membership.ApplicationId = applicationId;
            membership.UserId = userId;
            membership.Password = password;
            membership.PasswordFormat = passwordFormat;
            membership.PasswordSalt = passwordSalt;
            membership.IsApproved = isApproved;
            membership.IsLockedOut = isLockedOut;
            membership.CreateDate = createDate;
            membership.LastLoginDate = lastLoginDate;
            membership.LastPasswordChangedDate = lastPasswordChangedDate;
            membership.LastLockoutDate = lastLockoutDate;
            membership.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            membership.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            membership.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            membership.FailedPasswordAnswerAttemptWindowsStart = failedPasswordAnswerAttemptWindowsStart;
            return membership;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowsStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowsStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowsStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowsStart");
                _FailedPasswordAnswerAttemptWindowsStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowsStart");
                OnFailedPasswordAnswerAttemptWindowsStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowsStart;
        partial void OnFailedPasswordAnswerAttemptWindowsStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowsStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "MembershipApplication", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("smsfeedbackModel.MembershipApplication", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("smsfeedbackModel.MembershipApplication", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("smsfeedbackModel.MembershipApplication", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("smsfeedbackModel.MembershipApplication", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "MembershipUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("smsfeedbackModel.MembershipUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("smsfeedbackModel.MembershipUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("smsfeedbackModel.MembershipUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("smsfeedbackModel.MembershipUser", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="from">Initial value of the From property.</param>
        /// <param name="to">Initial value of the To property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="timeReceived">Initial value of the TimeReceived property.</param>
        /// <param name="read">Initial value of the Read property.</param>
        /// <param name="conversationId">Initial value of the ConversationId property.</param>
        public static Message CreateMessage(global::System.Int32 id, global::System.String from, global::System.String to, global::System.String text, global::System.DateTime timeReceived, global::System.Boolean read, global::System.String conversationId)
        {
            Message message = new Message();
            message.Id = id;
            message.From = from;
            message.To = to;
            message.Text = text;
            message.TimeReceived = timeReceived;
            message.Read = read;
            message.ConversationId = conversationId;
            return message;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private global::System.String _From;
        partial void OnFromChanging(global::System.String value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String To
        {
            get
            {
                return _To;
            }
            set
            {
                OnToChanging(value);
                ReportPropertyChanging("To");
                _To = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("To");
                OnToChanged();
            }
        }
        private global::System.String _To;
        partial void OnToChanging(global::System.String value);
        partial void OnToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeReceived
        {
            get
            {
                return _TimeReceived;
            }
            set
            {
                OnTimeReceivedChanging(value);
                ReportPropertyChanging("TimeReceived");
                _TimeReceived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeReceived");
                OnTimeReceivedChanged();
            }
        }
        private global::System.DateTime _TimeReceived;
        partial void OnTimeReceivedChanging(global::System.DateTime value);
        partial void OnTimeReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Read
        {
            get
            {
                return _Read;
            }
            set
            {
                OnReadChanging(value);
                ReportPropertyChanging("Read");
                _Read = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Read");
                OnReadChanged();
            }
        }
        private global::System.Boolean _Read;
        partial void OnReadChanging(global::System.Boolean value);
        partial void OnReadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConversationId
        {
            get
            {
                return _ConversationId;
            }
            set
            {
                OnConversationIdChanging(value);
                ReportPropertyChanging("ConversationId");
                _ConversationId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ConversationId");
                OnConversationIdChanged();
            }
        }
        private global::System.String _ConversationId;
        partial void OnConversationIdChanging(global::System.String value);
        partial void OnConversationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ResponseTime
        {
            get
            {
                return _ResponseTime;
            }
            set
            {
                OnResponseTimeChanging(value);
                ReportPropertyChanging("ResponseTime");
                _ResponseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseTime");
                OnResponseTimeChanged();
            }
        }
        private Nullable<global::System.Int64> _ResponseTime;
        partial void OnResponseTimeChanging(Nullable<global::System.Int64> value);
        partial void OnResponseTimeChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Messages can arrive via SMS of via XMPP
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSmsBased
        {
            get
            {
                return _IsSmsBased;
            }
            set
            {
                OnIsSmsBasedChanging(value);
                ReportPropertyChanging("IsSmsBased");
                _IsSmsBased = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSmsBased");
                OnIsSmsBasedChanged();
            }
        }
        private global::System.Boolean _IsSmsBased = false;
        partial void OnIsSmsBasedChanging(global::System.Boolean value);
        partial void OnIsSmsBasedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String XmppConnectionXmppUser
        {
            get
            {
                return _XmppConnectionXmppUser;
            }
            set
            {
                OnXmppConnectionXmppUserChanging(value);
                ReportPropertyChanging("XmppConnectionXmppUser");
                _XmppConnectionXmppUser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("XmppConnectionXmppUser");
                OnXmppConnectionXmppUserChanged();
            }
        }
        private global::System.String _XmppConnectionXmppUser;
        partial void OnXmppConnectionXmppUserChanging(global::System.String value);
        partial void OnXmppConnectionXmppUserChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "ConversationMessage", "Conversation")]
        public Conversation Conversation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("smsfeedbackModel.ConversationMessage", "Conversation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("smsfeedbackModel.ConversationMessage", "Conversation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Conversation> ConversationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("smsfeedbackModel.ConversationMessage", "Conversation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Conversation>("smsfeedbackModel.ConversationMessage", "Conversation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "ConversationHistoryMessage", "ConversationHistory")]
        public EntityCollection<ConversationHistory> ConversationHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConversationHistory>("smsfeedbackModel.ConversationHistoryMessage", "ConversationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConversationHistory>("smsfeedbackModel.ConversationHistoryMessage", "ConversationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "MessageXmppConnection", "XmppConnection")]
        public XmppConnection XmppConnection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XmppConnection>("smsfeedbackModel.MessageXmppConnection", "XmppConnection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XmppConnection>("smsfeedbackModel.MessageXmppConnection", "XmppConnection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XmppConnection> XmppConnectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XmppConnection>("smsfeedbackModel.MessageXmppConnection", "XmppConnection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XmppConnection>("smsfeedbackModel.MessageXmppConnection", "XmppConnection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Profile object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="propertyNames">Initial value of the PropertyNames property.</param>
        /// <param name="propertyValueStrings">Initial value of the PropertyValueStrings property.</param>
        /// <param name="propertyValueBinary">Initial value of the PropertyValueBinary property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static Profile CreateProfile(global::System.Guid userId, global::System.String propertyNames, global::System.String propertyValueStrings, global::System.Byte[] propertyValueBinary, global::System.DateTime lastUpdatedDate)
        {
            Profile profile = new Profile();
            profile.UserId = userId;
            profile.PropertyNames = propertyNames;
            profile.PropertyValueStrings = propertyValueStrings;
            profile.PropertyValueBinary = propertyValueBinary;
            profile.LastUpdatedDate = lastUpdatedDate;
            return profile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyNames
        {
            get
            {
                return _PropertyNames;
            }
            set
            {
                OnPropertyNamesChanging(value);
                ReportPropertyChanging("PropertyNames");
                _PropertyNames = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyNames");
                OnPropertyNamesChanged();
            }
        }
        private global::System.String _PropertyNames;
        partial void OnPropertyNamesChanging(global::System.String value);
        partial void OnPropertyNamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyValueStrings
        {
            get
            {
                return _PropertyValueStrings;
            }
            set
            {
                OnPropertyValueStringsChanging(value);
                ReportPropertyChanging("PropertyValueStrings");
                _PropertyValueStrings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValueStrings");
                OnPropertyValueStringsChanged();
            }
        }
        private global::System.String _PropertyValueStrings;
        partial void OnPropertyValueStringsChanging(global::System.String value);
        partial void OnPropertyValueStringsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PropertyValueBinary
        {
            get
            {
                return StructuralObject.GetValidValue(_PropertyValueBinary);
            }
            set
            {
                OnPropertyValueBinaryChanging(value);
                ReportPropertyChanging("PropertyValueBinary");
                _PropertyValueBinary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValueBinary");
                OnPropertyValueBinaryChanged();
            }
        }
        private global::System.Byte[] _PropertyValueBinary;
        partial void OnPropertyValueBinaryChanging(global::System.Byte[] value);
        partial void OnPropertyValueBinaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "UserProfile", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("smsfeedbackModel.UserProfile", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("smsfeedbackModel.UserProfile", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("smsfeedbackModel.UserProfile", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("smsfeedbackModel.UserProfile", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static Role CreateRole(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName)
        {
            Role role = new Role();
            role.ApplicationId = applicationId;
            role.RoleId = roleId;
            role.RoleName = roleName;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "RoleApplication", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("smsfeedbackModel.RoleApplication", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("smsfeedbackModel.RoleApplication", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("smsfeedbackModel.RoleApplication", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("smsfeedbackModel.RoleApplication", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "UsersInRoles", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("smsfeedbackModel.UsersInRoles", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("smsfeedbackModel.UsersInRoles", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="Subscriptions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subscriptions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subscriptions object.
        /// </summary>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="nrOfWorkingPoints">Initial value of the NrOfWorkingPoints property.</param>
        /// <param name="smsPerWorkingPoint">Initial value of the SmsPerWorkingPoint property.</param>
        /// <param name="nrOfUsers">Initial value of the NrOfUsers property.</param>
        /// <param name="nrOfHoursOfTraining">Initial value of the NrOfHoursOfTraining property.</param>
        public static Subscriptions CreateSubscriptions(global::System.String type, global::System.Int32 nrOfWorkingPoints, global::System.Int32 smsPerWorkingPoint, global::System.Int32 nrOfUsers, global::System.String nrOfHoursOfTraining)
        {
            Subscriptions subscriptions = new Subscriptions();
            subscriptions.Type = type;
            subscriptions.NrOfWorkingPoints = nrOfWorkingPoints;
            subscriptions.SmsPerWorkingPoint = smsPerWorkingPoint;
            subscriptions.NrOfUsers = nrOfUsers;
            subscriptions.NrOfHoursOfTraining = nrOfHoursOfTraining;
            return subscriptions;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                if (_Type != value)
                {
                    OnTypeChanging(value);
                    ReportPropertyChanging("Type");
                    _Type = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Type");
                    OnTypeChanged();
                }
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NrOfWorkingPoints
        {
            get
            {
                return _NrOfWorkingPoints;
            }
            set
            {
                OnNrOfWorkingPointsChanging(value);
                ReportPropertyChanging("NrOfWorkingPoints");
                _NrOfWorkingPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NrOfWorkingPoints");
                OnNrOfWorkingPointsChanged();
            }
        }
        private global::System.Int32 _NrOfWorkingPoints;
        partial void OnNrOfWorkingPointsChanging(global::System.Int32 value);
        partial void OnNrOfWorkingPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SmsPerWorkingPoint
        {
            get
            {
                return _SmsPerWorkingPoint;
            }
            set
            {
                OnSmsPerWorkingPointChanging(value);
                ReportPropertyChanging("SmsPerWorkingPoint");
                _SmsPerWorkingPoint = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SmsPerWorkingPoint");
                OnSmsPerWorkingPointChanged();
            }
        }
        private global::System.Int32 _SmsPerWorkingPoint;
        partial void OnSmsPerWorkingPointChanging(global::System.Int32 value);
        partial void OnSmsPerWorkingPointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NrOfUsers
        {
            get
            {
                return _NrOfUsers;
            }
            set
            {
                OnNrOfUsersChanging(value);
                ReportPropertyChanging("NrOfUsers");
                _NrOfUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NrOfUsers");
                OnNrOfUsersChanged();
            }
        }
        private global::System.Int32 _NrOfUsers;
        partial void OnNrOfUsersChanging(global::System.Int32 value);
        partial void OnNrOfUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NrOfHoursOfTraining
        {
            get
            {
                return _NrOfHoursOfTraining;
            }
            set
            {
                OnNrOfHoursOfTrainingChanging(value);
                ReportPropertyChanging("NrOfHoursOfTraining");
                _NrOfHoursOfTraining = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NrOfHoursOfTraining");
                OnNrOfHoursOfTrainingChanged();
            }
        }
        private global::System.String _NrOfHoursOfTraining;
        partial void OnNrOfHoursOfTrainingChanging(global::System.String value);
        partial void OnNrOfHoursOfTrainingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "CompanySubscriptions", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("smsfeedbackModel.CompanySubscriptions", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("smsfeedbackModel.CompanySubscriptions", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        public static Tag CreateTag(global::System.String name, global::System.String description, global::System.String companyName)
        {
            Tag tag = new Tag();
            tag.Name = name;
            tag.Description = description;
            tag.CompanyName = companyName;
            return tag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                if (_CompanyName != value)
                {
                    OnCompanyNameChanging(value);
                    ReportPropertyChanging("CompanyName");
                    _CompanyName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompanyName");
                    OnCompanyNameChanged();
                }
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_CompanyTag", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("smsfeedbackModel.FK_CompanyTag", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("smsfeedbackModel.FK_CompanyTag", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("smsfeedbackModel.FK_CompanyTag", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("smsfeedbackModel.FK_CompanyTag", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_TagConversationTags", "ConversationTag")]
        public EntityCollection<ConversationTag> ConversationTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConversationTag>("smsfeedbackModel.FK_TagConversationTags", "ConversationTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConversationTag>("smsfeedbackModel.FK_TagConversationTags", "ConversationTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_TagTagTagType", "TagTagType")]
        public EntityCollection<TagTagType> TagTagTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagTagType>("smsfeedbackModel.FK_TagTagTagType", "TagTagType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagTagType>("smsfeedbackModel.FK_TagTagTagType", "TagTagType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="TagTagType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TagTagType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TagTagType object.
        /// </summary>
        /// <param name="isDefault">Initial value of the IsDefault property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        /// <param name="tagCompanyName">Initial value of the TagCompanyName property.</param>
        /// <param name="tagTypeType">Initial value of the TagTypeType property.</param>
        public static TagTagType CreateTagTagType(global::System.Boolean isDefault, global::System.String tagName, global::System.String tagCompanyName, global::System.String tagTypeType)
        {
            TagTagType tagTagType = new TagTagType();
            tagTagType.IsDefault = isDefault;
            tagTagType.TagName = tagName;
            tagTagType.TagCompanyName = tagCompanyName;
            tagTagType.TagTypeType = tagTypeType;
            return tagTagType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private global::System.Boolean _IsDefault;
        partial void OnIsDefaultChanging(global::System.Boolean value);
        partial void OnIsDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                if (_TagName != value)
                {
                    OnTagNameChanging(value);
                    ReportPropertyChanging("TagName");
                    _TagName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TagName");
                    OnTagNameChanged();
                }
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagCompanyName
        {
            get
            {
                return _TagCompanyName;
            }
            set
            {
                if (_TagCompanyName != value)
                {
                    OnTagCompanyNameChanging(value);
                    ReportPropertyChanging("TagCompanyName");
                    _TagCompanyName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TagCompanyName");
                    OnTagCompanyNameChanged();
                }
            }
        }
        private global::System.String _TagCompanyName;
        partial void OnTagCompanyNameChanging(global::System.String value);
        partial void OnTagCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagTypeType
        {
            get
            {
                return _TagTypeType;
            }
            set
            {
                if (_TagTypeType != value)
                {
                    OnTagTypeTypeChanging(value);
                    ReportPropertyChanging("TagTypeType");
                    _TagTypeType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TagTypeType");
                    OnTagTypeTypeChanged();
                }
            }
        }
        private global::System.String _TagTypeType;
        partial void OnTagTypeTypeChanging(global::System.String value);
        partial void OnTagTypeTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_TagTagTagType", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("smsfeedbackModel.FK_TagTagTagType", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("smsfeedbackModel.FK_TagTagTagType", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("smsfeedbackModel.FK_TagTagTagType", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("smsfeedbackModel.FK_TagTagTagType", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_TagTypeTagTagType", "TagType")]
        public TagType TagType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagType>("smsfeedbackModel.FK_TagTypeTagTagType", "TagType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagType>("smsfeedbackModel.FK_TagTypeTagTagType", "TagType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TagType> TagTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TagType>("smsfeedbackModel.FK_TagTypeTagTagType", "TagType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TagType>("smsfeedbackModel.FK_TagTypeTagTagType", "TagType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="TagType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TagType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TagType object.
        /// </summary>
        /// <param name="type">Initial value of the Type property.</param>
        public static TagType CreateTagType(global::System.String type)
        {
            TagType tagType = new TagType();
            tagType.Type = type;
            return tagType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                if (_Type != value)
                {
                    OnTypeChanging(value);
                    ReportPropertyChanging("Type");
                    _Type = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Type");
                    OnTypeChanged();
                }
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_TagTypeTagTagType", "TagTagType")]
        public EntityCollection<TagTagType> TagTagTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagTagType>("smsfeedbackModel.FK_TagTypeTagTagType", "TagTagType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagTagType>("smsfeedbackModel.FK_TagTypeTagTagType", "TagTagType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        /// <param name="xmppConnectionXmppUser">Initial value of the XmppConnectionXmppUser property.</param>
        public static User CreateUser(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate, global::System.String xmppConnectionXmppUser)
        {
            User user = new User();
            user.ApplicationId = applicationId;
            user.UserId = userId;
            user.UserName = userName;
            user.IsAnonymous = isAnonymous;
            user.LastActivityDate = lastActivityDate;
            user.XmppConnectionXmppUser = xmppConnectionXmppUser;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Company_Name
        {
            get
            {
                return _Company_Name;
            }
            set
            {
                OnCompany_NameChanging(value);
                ReportPropertyChanging("Company_Name");
                _Company_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Company_Name");
                OnCompany_NameChanged();
            }
        }
        private global::System.String _Company_Name;
        partial void OnCompany_NameChanging(global::System.String value);
        partial void OnCompany_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String XmppConnectionXmppUser
        {
            get
            {
                return _XmppConnectionXmppUser;
            }
            set
            {
                OnXmppConnectionXmppUserChanging(value);
                ReportPropertyChanging("XmppConnectionXmppUser");
                _XmppConnectionXmppUser = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("XmppConnectionXmppUser");
                OnXmppConnectionXmppUserChanged();
            }
        }
        private global::System.String _XmppConnectionXmppUser;
        partial void OnXmppConnectionXmppUserChanging(global::System.String value);
        partial void OnXmppConnectionXmppUserChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "UsersForWorkingPoints", "WorkingPoint")]
        public EntityCollection<WorkingPoint> WorkingPoints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkingPoint>("smsfeedbackModel.UsersForWorkingPoints", "WorkingPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkingPoint>("smsfeedbackModel.UsersForWorkingPoints", "WorkingPoint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_UserCompany", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("smsfeedbackModel.FK_UserCompany", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("smsfeedbackModel.FK_UserCompany", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("smsfeedbackModel.FK_UserCompany", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("smsfeedbackModel.FK_UserCompany", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "UserApplication", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("smsfeedbackModel.UserApplication", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("smsfeedbackModel.UserApplication", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("smsfeedbackModel.UserApplication", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("smsfeedbackModel.UserApplication", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "MembershipUser", "Membership")]
        public Membership Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Membership>("smsfeedbackModel.MembershipUser", "Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Membership>("smsfeedbackModel.MembershipUser", "Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Membership> MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Membership>("smsfeedbackModel.MembershipUser", "Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Membership>("smsfeedbackModel.MembershipUser", "Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "UserProfile", "Profile")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("smsfeedbackModel.UserProfile", "Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("smsfeedbackModel.UserProfile", "Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("smsfeedbackModel.UserProfile", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("smsfeedbackModel.UserProfile", "Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "UsersInRoles", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("smsfeedbackModel.UsersInRoles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("smsfeedbackModel.UsersInRoles", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "UserXmppConnection", "XmppConnection")]
        public XmppConnection XmppConnection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XmppConnection>("smsfeedbackModel.UserXmppConnection", "XmppConnection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XmppConnection>("smsfeedbackModel.UserXmppConnection", "XmppConnection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XmppConnection> XmppConnectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XmppConnection>("smsfeedbackModel.UserXmppConnection", "XmppConnection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XmppConnection>("smsfeedbackModel.UserXmppConnection", "XmppConnection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="WorkingPoint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkingPoint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkingPoint object.
        /// </summary>
        /// <param name="telNumber">Initial value of the TelNumber property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="provider">Initial value of the Provider property.</param>
        /// <param name="sentSms">Initial value of the SentSms property.</param>
        /// <param name="maxNrOfSmsToSend">Initial value of the MaxNrOfSmsToSend property.</param>
        public static WorkingPoint CreateWorkingPoint(global::System.String telNumber, global::System.String description, global::System.String name, global::System.String provider, global::System.Int32 sentSms, global::System.Int32 maxNrOfSmsToSend)
        {
            WorkingPoint workingPoint = new WorkingPoint();
            workingPoint.TelNumber = telNumber;
            workingPoint.Description = description;
            workingPoint.Name = name;
            workingPoint.Provider = provider;
            workingPoint.SentSms = sentSms;
            workingPoint.MaxNrOfSmsToSend = maxNrOfSmsToSend;
            return workingPoint;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TelNumber
        {
            get
            {
                return _TelNumber;
            }
            set
            {
                if (_TelNumber != value)
                {
                    OnTelNumberChanging(value);
                    ReportPropertyChanging("TelNumber");
                    _TelNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TelNumber");
                    OnTelNumberChanged();
                }
            }
        }
        private global::System.String _TelNumber;
        partial void OnTelNumberChanging(global::System.String value);
        partial void OnTelNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provider
        {
            get
            {
                return _Provider;
            }
            set
            {
                OnProviderChanging(value);
                ReportPropertyChanging("Provider");
                _Provider = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Provider");
                OnProviderChanged();
            }
        }
        private global::System.String _Provider;
        partial void OnProviderChanging(global::System.String value);
        partial void OnProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SentSms
        {
            get
            {
                return _SentSms;
            }
            set
            {
                OnSentSmsChanging(value);
                ReportPropertyChanging("SentSms");
                _SentSms = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentSms");
                OnSentSmsChanged();
            }
        }
        private global::System.Int32 _SentSms;
        partial void OnSentSmsChanging(global::System.Int32 value);
        partial void OnSentSmsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxNrOfSmsToSend
        {
            get
            {
                return _MaxNrOfSmsToSend;
            }
            set
            {
                OnMaxNrOfSmsToSendChanging(value);
                ReportPropertyChanging("MaxNrOfSmsToSend");
                _MaxNrOfSmsToSend = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxNrOfSmsToSend");
                OnMaxNrOfSmsToSendChanged();
            }
        }
        private global::System.Int32 _MaxNrOfSmsToSend;
        partial void OnMaxNrOfSmsToSendChanging(global::System.Int32 value);
        partial void OnMaxNrOfSmsToSendChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupportConversation
        {
            get
            {
                return _SupportConversation;
            }
            set
            {
                OnSupportConversationChanging(value);
                ReportPropertyChanging("SupportConversation");
                _SupportConversation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SupportConversation");
                OnSupportConversationChanged();
            }
        }
        private global::System.String _SupportConversation;
        partial void OnSupportConversationChanging(global::System.String value);
        partial void OnSupportConversationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "UsersForWorkingPoints", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("smsfeedbackModel.UsersForWorkingPoints", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("smsfeedbackModel.UsersForWorkingPoints", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_WorkingPointConversation", "Conversation")]
        public EntityCollection<Conversation> Conversations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Conversation>("smsfeedbackModel.FK_WorkingPointConversation", "Conversation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Conversation>("smsfeedbackModel.FK_WorkingPointConversation", "Conversation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "WorkingPointActivityLogWorkingPoint", "ActivityLogWorkingPoint")]
        public EntityCollection<ActivityLogWorkingPoint> ActivityLogWorkingPoints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityLogWorkingPoint>("smsfeedbackModel.WorkingPointActivityLogWorkingPoint", "ActivityLogWorkingPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityLogWorkingPoint>("smsfeedbackModel.WorkingPointActivityLogWorkingPoint", "ActivityLogWorkingPoint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "FK_SupportConversationForWorkingPoint1", "Conversation")]
        public Conversation ConversationForSupport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("smsfeedbackModel.FK_SupportConversationForWorkingPoint1", "Conversation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("smsfeedbackModel.FK_SupportConversationForWorkingPoint1", "Conversation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Conversation> ConversationForSupportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("smsfeedbackModel.FK_SupportConversationForWorkingPoint1", "Conversation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Conversation>("smsfeedbackModel.FK_SupportConversationForWorkingPoint1", "Conversation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smsfeedbackModel", Name="XmppConnection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XmppConnection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new XmppConnection object.
        /// </summary>
        /// <param name="xmppUser">Initial value of the XmppUser property.</param>
        /// <param name="xmppPassword">Initial value of the XmppPassword property.</param>
        public static XmppConnection CreateXmppConnection(global::System.String xmppUser, global::System.String xmppPassword)
        {
            XmppConnection xmppConnection = new XmppConnection();
            xmppConnection.XmppUser = xmppUser;
            xmppConnection.XmppPassword = xmppPassword;
            return xmppConnection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String XmppUser
        {
            get
            {
                return _XmppUser;
            }
            set
            {
                if (_XmppUser != value)
                {
                    OnXmppUserChanging(value);
                    ReportPropertyChanging("XmppUser");
                    _XmppUser = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("XmppUser");
                    OnXmppUserChanged();
                }
            }
        }
        private global::System.String _XmppUser;
        partial void OnXmppUserChanging(global::System.String value);
        partial void OnXmppUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String XmppPassword
        {
            get
            {
                return _XmppPassword;
            }
            set
            {
                OnXmppPasswordChanging(value);
                ReportPropertyChanging("XmppPassword");
                _XmppPassword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("XmppPassword");
                OnXmppPasswordChanged();
            }
        }
        private global::System.String _XmppPassword;
        partial void OnXmppPasswordChanging(global::System.String value);
        partial void OnXmppPasswordChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "UserXmppConnection", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("smsfeedbackModel.UserXmppConnection", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("smsfeedbackModel.UserXmppConnection", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smsfeedbackModel", "MessageXmppConnection", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("smsfeedbackModel.MessageXmppConnection", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("smsfeedbackModel.MessageXmppConnection", "Message", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
